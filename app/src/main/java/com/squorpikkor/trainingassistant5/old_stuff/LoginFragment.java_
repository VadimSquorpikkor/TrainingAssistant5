package com.squorpikkor.trainingassistant5;

import static android.app.Activity.RESULT_OK;
import static com.squorpikkor.trainingassistant5.App.TAG;

import android.accounts.AccountManager;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;

import androidx.fragment.app.Fragment;
import androidx.lifecycle.ViewModelProvider;

import com.google.android.gms.auth.GoogleAuthUtil;
import com.google.android.gms.common.AccountPicker;
import com.google.firebase.auth.FirebaseAuth;
import com.squorpikkor.trainingassistant5.old_stuff.MainViewModel;
import com.squorpikkor.trainingassistant5.old_stuff.SaveLoad;

public class LoginFragment extends Fragment {

    private static final int REQUEST_CODE = 100;
    /**
     * При старте фрагмента в поле пароля загружается ранее сохраненный пароль, или "", если пароль
     * не был введен ранее. В поле email вводится почта акккаунта телефона. Если введены оба
     * значения, сразу автоматом приложение подключается к firebase с попыткой авторизоваться. Если
     * успешно, то открывается следующий фрагмент. Иначе пользователь должен ввести руками пароль.
     * email ввести нельзя, автоматом выбрается подключенный к устройству, т.е. войти может только
     * аккаунт google, который был зарегистрирован в firebase.
     * Введенный руками пароль сохраняется в устройстве и при последующем запуске приложения
     * автоматом вводится в поле пароля
     */
    private MainViewModel mViewModel;

    public static LoginFragment newInstance() {
        return new LoginFragment();
    }

    private static final String PASS = "pass";

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        ThemeUtils.onActivityCreateSetTheme(getActivity());
        View view = inflater.inflate(R.layout.fragment_login, container, false);
        mViewModel = new ViewModelProvider(requireActivity()).get(MainViewModel.class);

        if (FirebaseAuth.getInstance().getCurrentUser() != null && FirebaseAuth.getInstance().getCurrentUser().getEmail() != null) {
            //todo open fragment
        } else signIn();

        EditText emailText = view.findViewById(R.id.editTextEmail);
        EditText passwordText = view.findViewById(R.id.editTextPassword);
        passwordText.setText(SaveLoad.loadString(PASS));

        view.findViewById(R.id.sign_in_button).setOnClickListener(view1 -> {
            signInWithEmailAndPassword(emailText.getText().toString(), passwordText.getText().toString(), true);
        });

        mViewModel.getDeviceAccountEmail().observe(getViewLifecycleOwner(), email -> {
            emailText.setText(email);
            signInWithEmailAndPassword(email, passwordText.getText().toString(), false);
        });

        return view;
    }

    private void signIn() {
        Intent googlePicker = AccountPicker.newChooseAccountIntent(null, null, new String[]{GoogleAuthUtil.GOOGLE_ACCOUNT_TYPE}, true, null, null, null, null);
        startActivityForResult(googlePicker, REQUEST_CODE);
    }

    public void onActivityResult(final int requestCode, final int resultCode,
                                 final Intent data) {
        if (requestCode == REQUEST_CODE && resultCode == RESULT_OK) {
            String accountName = data.getStringExtra(AccountManager.KEY_ACCOUNT_NAME);
            Log.e(TAG, "onActivityResult: "+accountName);
            mViewModel.getDeviceAccountEmail().setValue(accountName);
        }
    }

    private void signInWithEmailAndPassword(String email, String password, boolean savePass) {
        if (email==null || password==null) return;
        if (email.equals("") || password.equals("")) return;
        mViewModel.getAuth().signInWithEmailAndPassword(email, password)
                .addOnCompleteListener(requireActivity(), task -> {
                    if (task.isSuccessful()) {
                        Log.e(TAG, "signInWithEmail:success");
                        if (savePass) SaveLoad.save(PASS, password);
                        mViewModel.getUserIdByEmail(email);
                    } else {
                        Log.e(TAG, "signInWithEmail:failure", task.getException());
                    }
                });
    }

}
